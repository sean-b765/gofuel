name: Build docker image and push to ECR

on:
  push:
    branches: [ "master" ]

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY: gofuel
  ROLE: arn:aws:iam::476720619618:role/github-actions-access

permissions:
  contents: read
  id-token: write

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ env.ROLE }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
        MAPS_KEY: ${{ secrets.MAPS_KEY }}
        BASE_PATH: ${{ vars.BASE_PATH }}
      run: |
        # Build a docker container and
        # push it to ECR so that our lambda can pull the newest image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg MAPS_KEY=$MAPS_KEY --build-arg BASE_PATH=$BASE_PATH .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY --all-tags
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
